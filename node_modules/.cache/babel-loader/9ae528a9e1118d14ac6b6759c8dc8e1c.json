{"remainingRequest":"/Users/jason/Desktop/GmailPIDTool/node_modules/thread-loader/dist/cjs.js!/Users/jason/Desktop/GmailPIDTool/node_modules/babel-loader/lib/index.js!/Users/jason/Desktop/GmailPIDTool/node_modules/axios/lib/helpers/isAbsoluteURL.js","dependencies":[{"path":"/Users/jason/Desktop/GmailPIDTool/node_modules/axios/lib/helpers/isAbsoluteURL.js","mtime":499162500000},{"path":"/Users/jason/Desktop/GmailPIDTool/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/jason/Desktop/GmailPIDTool/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/jason/Desktop/GmailPIDTool/node_modules/babel-loader/lib/index.js","mtime":315532800000}],"contextDependencies":[],"result":["'use strict';\n/**\n * Determines whether the specified URL is absolute\n *\n * @param {string} url The URL to test\n * @returns {boolean} True if the specified URL is absolute, otherwise false\n */\n\nmodule.exports = function isAbsoluteURL(url) {\n  // A URL is considered absolute if it begins with \"<scheme>://\" or \"//\" (protocol-relative URL).\n  // RFC 3986 defines scheme name as a sequence of characters beginning with a letter and followed\n  // by any combination of letters, digits, plus, period, or hyphen.\n  return /^([a-z][a-z\\d\\+\\-\\.]*:)?\\/\\//i.test(url);\n};",{"version":3,"sources":["/Users/jason/Desktop/GmailPIDTool/node_modules/axios/lib/helpers/isAbsoluteURL.js"],"names":["module","exports","isAbsoluteURL","url","test"],"mappings":"AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;;AACAA,MAAM,CAACC,OAAP,GAAiB,SAASC,aAAT,CAAuBC,GAAvB,EAA4B;AAC3C;AACA;AACA;AACA,SAAO,gCAAgCC,IAAhC,CAAqCD,GAArC,CAAP;AACD,CALD","sourcesContent":["'use strict';\n\n/**\n * Determines whether the specified URL is absolute\n *\n * @param {string} url The URL to test\n * @returns {boolean} True if the specified URL is absolute, otherwise false\n */\nmodule.exports = function isAbsoluteURL(url) {\n  // A URL is considered absolute if it begins with \"<scheme>://\" or \"//\" (protocol-relative URL).\n  // RFC 3986 defines scheme name as a sequence of characters beginning with a letter and followed\n  // by any combination of letters, digits, plus, period, or hyphen.\n  return /^([a-z][a-z\\d\\+\\-\\.]*:)?\\/\\//i.test(url);\n};\n"]}]}