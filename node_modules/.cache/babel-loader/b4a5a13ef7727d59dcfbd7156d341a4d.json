{"remainingRequest":"/Users/administrator/Desktop/scheduleOmatic/node_modules/thread-loader/dist/cjs.js!/Users/administrator/Desktop/scheduleOmatic/node_modules/babel-loader/lib/index.js!/Users/administrator/Desktop/scheduleOmatic/node_modules/core-js/modules/es6.function.name.js","dependencies":[{"path":"/Users/administrator/Desktop/scheduleOmatic/node_modules/core-js/modules/es6.function.name.js","mtime":1616809256763},{"path":"/Users/administrator/Desktop/scheduleOmatic/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/administrator/Desktop/scheduleOmatic/node_modules/thread-loader/dist/cjs.js","mtime":1616809260390},{"path":"/Users/administrator/Desktop/scheduleOmatic/node_modules/babel-loader/lib/index.js","mtime":1616809255971}],"contextDependencies":[],"result":["var dP = require('./_object-dp').f;\n\nvar FProto = Function.prototype;\nvar nameRE = /^\\s*function ([^ (]*)/;\nvar NAME = 'name'; // 19.2.4.2 name\n\nNAME in FProto || require('./_descriptors') && dP(FProto, NAME, {\n  configurable: true,\n  get: function get() {\n    try {\n      return ('' + this).match(nameRE)[1];\n    } catch (e) {\n      return '';\n    }\n  }\n});",{"version":3,"sources":["/Users/administrator/Desktop/scheduleOmatic/node_modules/core-js/modules/es6.function.name.js"],"names":["dP","require","f","FProto","Function","prototype","nameRE","NAME","configurable","get","match","e"],"mappings":"AAAA,IAAIA,EAAE,GAAGC,OAAO,CAAC,cAAD,CAAP,CAAwBC,CAAjC;;AACA,IAAIC,MAAM,GAAGC,QAAQ,CAACC,SAAtB;AACA,IAAIC,MAAM,GAAG,uBAAb;AACA,IAAIC,IAAI,GAAG,MAAX,C,CAEA;;AACAA,IAAI,IAAIJ,MAAR,IAAkBF,OAAO,CAAC,gBAAD,CAAP,IAA6BD,EAAE,CAACG,MAAD,EAASI,IAAT,EAAe;AAC9DC,EAAAA,YAAY,EAAE,IADgD;AAE9DC,EAAAA,GAAG,EAAE,eAAY;AACf,QAAI;AACF,aAAO,CAAC,KAAK,IAAN,EAAYC,KAAZ,CAAkBJ,MAAlB,EAA0B,CAA1B,CAAP;AACD,KAFD,CAEE,OAAOK,CAAP,EAAU;AACV,aAAO,EAAP;AACD;AACF;AAR6D,CAAf,CAAjD","sourcesContent":["var dP = require('./_object-dp').f;\nvar FProto = Function.prototype;\nvar nameRE = /^\\s*function ([^ (]*)/;\nvar NAME = 'name';\n\n// 19.2.4.2 name\nNAME in FProto || require('./_descriptors') && dP(FProto, NAME, {\n  configurable: true,\n  get: function () {\n    try {\n      return ('' + this).match(nameRE)[1];\n    } catch (e) {\n      return '';\n    }\n  }\n});\n"]}]}