{"remainingRequest":"/Users/administrator/Desktop/scheduleOmatic/node_modules/babel-loader/lib/index.js!/Users/administrator/Desktop/scheduleOmatic/node_modules/css-loader/lib/url/escape.js","dependencies":[{"path":"/Users/administrator/Desktop/scheduleOmatic/node_modules/css-loader/lib/url/escape.js","mtime":1616809256852},{"path":"/Users/administrator/Desktop/scheduleOmatic/node_modules/cache-loader/dist/cjs.js","mtime":1616809256131},{"path":"/Users/administrator/Desktop/scheduleOmatic/node_modules/babel-loader/lib/index.js","mtime":1616809255971}],"contextDependencies":[],"result":["module.exports = function escape(url) {\n  if (typeof url !== 'string') {\n    return url;\n  } // If url is already wrapped in quotes, remove them\n\n\n  if (/^['\"].*['\"]$/.test(url)) {\n    url = url.slice(1, -1);\n  } // Should url be wrapped?\n  // See https://drafts.csswg.org/css-values-3/#urls\n\n\n  if (/[\"'() \\t\\n]/.test(url)) {\n    return '\"' + url.replace(/\"/g, '\\\\\"').replace(/\\n/g, '\\\\n') + '\"';\n  }\n\n  return url;\n};",{"version":3,"sources":["/Users/administrator/Desktop/scheduleOmatic/node_modules/css-loader/lib/url/escape.js"],"names":["module","exports","escape","url","test","slice","replace"],"mappings":"AAAAA,MAAM,CAACC,OAAP,GAAiB,SAASC,MAAT,CAAgBC,GAAhB,EAAqB;AAClC,MAAI,OAAOA,GAAP,KAAe,QAAnB,EAA6B;AACzB,WAAOA,GAAP;AACH,GAHiC,CAIlC;;;AACA,MAAI,eAAeC,IAAf,CAAoBD,GAApB,CAAJ,EAA8B;AAC1BA,IAAAA,GAAG,GAAGA,GAAG,CAACE,KAAJ,CAAU,CAAV,EAAa,CAAC,CAAd,CAAN;AACH,GAPiC,CAQlC;AACA;;;AACA,MAAI,cAAcD,IAAd,CAAmBD,GAAnB,CAAJ,EAA6B;AACzB,WAAO,MAAMA,GAAG,CAACG,OAAJ,CAAY,IAAZ,EAAkB,KAAlB,EAAyBA,OAAzB,CAAiC,KAAjC,EAAwC,KAAxC,CAAN,GAAuD,GAA9D;AACH;;AAED,SAAOH,GAAP;AACH,CAfD","sourcesContent":["module.exports = function escape(url) {\n    if (typeof url !== 'string') {\n        return url\n    }\n    // If url is already wrapped in quotes, remove them\n    if (/^['\"].*['\"]$/.test(url)) {\n        url = url.slice(1, -1);\n    }\n    // Should url be wrapped?\n    // See https://drafts.csswg.org/css-values-3/#urls\n    if (/[\"'() \\t\\n]/.test(url)) {\n        return '\"' + url.replace(/\"/g, '\\\\\"').replace(/\\n/g, '\\\\n') + '\"'\n    }\n\n    return url\n}\n"]}]}