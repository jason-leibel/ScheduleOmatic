{"remainingRequest":"/Users/administrator/Desktop/scheduleOmatic/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/administrator/Desktop/scheduleOmatic/src/components/UploadEmployeeList.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/administrator/Desktop/scheduleOmatic/src/components/UploadEmployeeList.vue","mtime":1616919906936},{"path":"/Users/administrator/Desktop/scheduleOmatic/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/administrator/Desktop/scheduleOmatic/node_modules/babel-loader/lib/index.js","mtime":1616809255971},{"path":"/Users/administrator/Desktop/scheduleOmatic/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/administrator/Desktop/scheduleOmatic/node_modules/vue-loader/lib/index.js","mtime":1616809260729}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nexport default {\n  name: \"UploadEmployeeList\",\n  props: [\n    \"employeeList\"\n  ],\n  data() {\n    return {\n      file: null,\n    }\n  },\n  methods: {\n    uploadFile() {\n      let reader = new FileReader();\n      reader.readAsText(this.file, \"UTF-8\");\n      reader.onload = evt => {\n        this.$emit(\"updateEmployeeList\", JSON.parse(evt.target.result))\n        this.$emit(\"notification\", \"Success\", \"success\", \"File uploaded successfully\")\n      }\n      reader.onerror = evt => {\n        this.$emit(\"notification\", \"Error\", \"error\", \"No file uploaded\")\n      }\n    }\n  }\n}\n",{"version":3,"sources":["UploadEmployeeList.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA8BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"UploadEmployeeList.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <v-expansion-panels style=\"width: 80%; margin: 10px auto\" accordion>\n    <v-expansion-panel\n        v-for=\"(item,i) in 1\"\n        :key=\"i\"\n    >\n      <v-expansion-panel-header><h1>Upload Employee List File</h1></v-expansion-panel-header>\n      <v-expansion-panel-content>\n\n          <v-file-input\n              v-model=\"file\"\n              accept=\"*.json\"\n              label=\"File input\"\n              on\n          ></v-file-input>\n\n          <v-btn\n              color=\"primary\"\n              class=\"mr-4\"\n              :disabled=\"file === null\"\n              @click=\"uploadFile\"\n          >\n            Upload to List\n          </v-btn>\n        </v-expansion-panel-content>\n      </v-expansion-panel>\n    </v-expansion-panels>\n</template>\n\n<script>\nexport default {\n  name: \"UploadEmployeeList\",\n  props: [\n    \"employeeList\"\n  ],\n  data() {\n    return {\n      file: null,\n    }\n  },\n  methods: {\n    uploadFile() {\n      let reader = new FileReader();\n      reader.readAsText(this.file, \"UTF-8\");\n      reader.onload = evt => {\n        this.$emit(\"updateEmployeeList\", JSON.parse(evt.target.result))\n        this.$emit(\"notification\", \"Success\", \"success\", \"File uploaded successfully\")\n      }\n      reader.onerror = evt => {\n        this.$emit(\"notification\", \"Error\", \"error\", \"No file uploaded\")\n      }\n    }\n  }\n}\n</script>\n\n<style scoped>\n\n</style>"]}]}