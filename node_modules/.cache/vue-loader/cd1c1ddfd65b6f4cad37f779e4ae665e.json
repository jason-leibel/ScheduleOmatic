{"remainingRequest":"/Users/administrator/Desktop/scheduleOmatic/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/administrator/Desktop/scheduleOmatic/src/App.vue?vue&type=style&index=0&lang=css&","dependencies":[{"path":"/Users/administrator/Desktop/scheduleOmatic/src/App.vue","mtime":1616883587968},{"path":"/Users/administrator/Desktop/scheduleOmatic/node_modules/css-loader/index.js","mtime":1616809256849},{"path":"/Users/administrator/Desktop/scheduleOmatic/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":1616809260730},{"path":"/Users/administrator/Desktop/scheduleOmatic/node_modules/postcss-loader/src/index.js","mtime":1616809258897},{"path":"/Users/administrator/Desktop/scheduleOmatic/node_modules/cache-loader/dist/cjs.js","mtime":1616809256131},{"path":"/Users/administrator/Desktop/scheduleOmatic/node_modules/vue-loader/lib/index.js","mtime":1616809260729}],"contextDependencies":[],"result":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n#app {\n  font-family: \"Roboto\", sans-serif !important;\n}\n\n.v-data-table-header {\n  background-color: #e6e6e6;\n}\n",{"version":3,"sources":["App.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAoPA;AACA;AACA;;AAEA;AACA;AACA","file":"App.vue","sourceRoot":"src","sourcesContent":["<template>\n  <v-app id=\"app\">\n    <Navigation/>\n    <AddEmployee @addEmployee=\"addEmployee\" @notification=\"sendNotification\"/>\n    <UploadEmployeeList @updateEmployeeList=\"updateEmployeeList\"/>\n    <EmployeeList :employee-list=\"liveEmployeeList\" @generateSchedule=\"generateSchedule\"\n                  @notification=\"sendNotification\"/>\n    <notifications group=\"app\" position=\"bottom left\"/>\n    <v-card\n        class=\"mx-auto\"\n        tile\n        style=\"width: 95%; padding: 1 0px; margin: 20px auto;\"\n    >\n      <v-data-table\n          :headers=\"scheduleHeaders\"\n          :items=\"scheduleObj\"\n          :items-per-page=\"10\"/>\n    </v-card>\n  </v-app>\n</template>\n\n<script>\nimport Navigation from \"./components/NavigationBar.vue\";\nimport AddEmployee from \"./components/AddEmployee.vue\";\nimport EmployeeList from \"./components/EmployeeList.vue\";\nimport UploadEmployeeList from \"./components/UploadEmployeeList.vue\";\n\nimport 'vuetify/dist/vuetify.css'\n\nexport default {\n  name: \"app\",\n  components: {\n    Navigation,\n    AddEmployee,\n    EmployeeList,\n    UploadEmployeeList\n  },\n  methods: {\n    updateEmployeeList(employees) {\n      this.employeeList = employees\n    },\n    addEmployee(employee) {\n      if (!this.employeeList) {\n        this.employeeList = []\n      }\n      this.employeeList.push(employee)\n    },\n    sendNotification(title, type, text) {\n      console.log(\"Notification\")\n      this.$notify({\n        group: 'app',\n        title,\n        type,\n        duration: 6000,\n        text\n      });\n    },\n    generateSchedule(list) {\n      let postOffice = this.timeObj.departments.filter(department => department.name === \"Post Office\")[0]\n      let workersPO = list.filter(person => person.employeeDepartment === \"Post Office\")\n      this.scheduleObj = []\n      let scheduleObj = {}\n\n      postOffice.timeFrames.forEach(tf => {\n        scheduleObj[tf.day] = {}\n        workersPO.forEach(wrk => {\n          if (wrk.employeeAvailability[tf.day] !== undefined) {\n            scheduleObj[tf.day][wrk.employeeName] = {}\n            scheduleObj[tf.day][wrk.employeeName].available = true\n            let empStartTime = wrk.employeeAvailability[tf.day].startTime\n            let empEndTime = wrk.employeeAvailability[tf.day].endTime\n            // If the employee is available before or at shift open\n            if (wrk.employeeAvailability[tf.day].startTime <= tf.open) {\n              // schedule employee to work from open eiter until 8 hours or they become unavailable\n              scheduleObj[tf.day][wrk.employeeName].startTime = tf.open\n              let hoursAvail = empEndTime - empStartTime\n              scheduleObj[tf.day][wrk.employeeName].endTime = (\n                  hoursAvail < 8\n              ) ? tf.open + hoursAvail : ((tf.open + 8) > tf.close) ? tf.close : tf.open + 8\n\n            } else {\n              // schedule employee to work from their time available either until close or 8 hours later\n              scheduleObj[tf.day][wrk.employeeName].startTime = wrk.employeeAvailability[tf.day].startTime\n              let hoursAvail = empEndTime - empStartTime\n              scheduleObj[tf.day][wrk.employeeName].endTime = ((hoursAvail + empStartTime) > tf.close) ? tf.close :\n                  (hoursAvail + empStartTime)\n            }\n          } else {\n            // Employee unavailable that day\n            scheduleObj[tf.day][wrk.employeeName] = {}\n            scheduleObj[tf.day][wrk.employeeName].available = false\n          }\n        })\n      })\n      this.translateToTable(scheduleObj)\n    },\n    translateToTable(obj) {\n      let result = []\n      obj = this.filterOutPeople(obj)\n      let days = [\"sunday\", \"monday\", \"tuesday\", \"wednesday\", \"thursday\", \"friday\", \"saturday\"]\n      this.employeeList.forEach(employee => {\n        let temp = {}\n        temp[\"name\"] = employee.employeeName\n        temp[\"department\"] = employee.employeeDepartment\n        temp[\"totalTimeThisWeek\"] = 0\n        temp[\"schedule\"] = {}\n        days.forEach(day => {\n          if (obj[day][employee.employeeName] !== undefined) {\n            temp[\"totalTimeThisWeek\"] += obj[day][employee.employeeName].endTime - obj[day][employee.employeeName].startTime\n            temp[\"schedule\"][day] = (obj[day][employee.employeeName].available) ?\n                this.doubleToTimeString(obj[day][employee.employeeName].startTime) +\n                \" - \" + this.doubleToTimeString(obj[day][employee.employeeName].endTime)\n                : \"\"\n          }\n        })\n        result.push(temp)\n      })\n      console.log(result)\n      this.scheduleObj = result\n    },\n    filterOutPeople(obj) {\n      for (let day in obj) {\n        if (obj.hasOwnProperty(day)) {\n          let employees = this.jsonObjectsToArray(obj[day]).filter(i => i.available)\n          let depConst = this.timeObj.departments.filter(i => i.name === \"Post Office\")[0]\n          let timeConst = depConst.timeFrames.filter(i => i.day === day)[0]\n          if (employees.length > depConst.requiredEmployeeAtGivenTime) {\n            let hasStartingEmployee = false\n            let hasClosingEmployee = false\n            let keepLooping = true\n            while (keepLooping) {\n              for (let i = 0; i < employees.length; i++) {\n                let employee = employees[i]\n                if (employee.startTime === timeConst.open) {\n                  if (hasStartingEmployee) {\n                    employees.splice(i, 1)\n                  }\n                  hasStartingEmployee = true\n                } else if (employee.endTime === timeConst.close) {\n                  if (hasClosingEmployee) {\n                    employees.splice(i, 1)\n                  }\n                  hasClosingEmployee = true\n                } else {\n                  employees.splice(i, 1)\n                }\n                if (employees.length <= depConst.requiredEmployeeAtGivenTime) {\n                  keepLooping = false\n                  break\n                }\n              }\n            }\n\n          } else if (employees.length < depConst.requiredEmployeeAtGivenTime) {\n            this.sendNotification(\"Warning\", \"warning\", `Not enough employees available on ${day}`)\n          }\n\n          obj[day] = this.arrayToJsonObjects(employees, day)\n        }\n      }\n      return obj\n    },\n    arrayToJsonObjects(arr, day) {\n      let result = {}\n      arr.forEach(item => {\n        result[item.name] = item\n      })\n      return result\n    },\n    jsonObjectsToArray(object) {\n      let result = []\n      for (let key in object) {\n        if (object.hasOwnProperty(key)) {\n          object[key][\"name\"] = key\n          result.push(object[key])\n        }\n      }\n      return result\n    },\n    doubleToTimeString(str) {\n      let val = parseFloat(str)\n      if (val > 12) {\n        val = val - 12\n        return `${Math.floor(val)}:${this.getMinutesFromDouble(val - Math.floor(val))} PM`\n      } else {\n        return `${Math.floor(val)}:${this.getMinutesFromDouble(val - Math.floor(val))} AM`\n      }\n    },\n    getMinutesFromDouble(flt) {\n      switch (flt) {\n        case 0.25:\n          return \"15\"\n        case 0.5:\n          return \"30\"\n        case 0.75:\n          return \"45\"\n        default:\n          return \"00\"\n      }\n    }\n  },\n  computed: {\n    liveEmployeeList() {\n      return this.employeeList\n    }\n  },\n  data() {\n    return {\n      scheduleObj: [],\n      scheduleHeaders: [\n        {text: 'Employee Name', align: 'start', value: 'name'},\n        {text: 'Department', value: 'department'},\n        {text: 'Total Hours', value: 'totalTimeThisWeek'},\n        {text: 'Sunday', value: 'schedule.sunday'},\n        {text: 'Monday', value: 'schedule.monday'},\n        {text: 'Tuesday', value: 'schedule.tuesday'},\n        {text: 'Wednesday', value: 'schedule.wednesday'},\n        {text: 'Thursday', value: 'schedule.thursday'},\n        {text: 'Friday', value: 'schedule.friday'},\n        {text: 'Saturday', value: 'schedule.saturday'}\n      ],\n      employeeList: [{\"employeeName\":\"Lucy Davey\",\"employeeAvailability\":{\"sunday\":{\"startTime\":12,\"endTime\":17},\"wednesday\":{\"startTime\":12,\"endTime\":17},\"thursday\":{\"startTime\":12,\"endTime\":17},\"friday\":{\"startTime\":12,\"endTime\":17},\"saturday\":{\"startTime\":12,\"endTime\":17},\"totalHoursAvailable\":25},\"employeeHoursToWork\":\"35\",\"employeeDepartment\":\"Post Office\"},{\"employeeName\":\"Ivy Davey\",\"employeeAvailability\":{\"sunday\":{\"startTime\":12,\"endTime\":22},\"monday\":{\"startTime\":12,\"endTime\":22},\"tuesday\":{\"startTime\":12,\"endTime\":22},\"wednesday\":{\"startTime\":12,\"endTime\":22},\"thursday\":{\"startTime\":12,\"endTime\":22},\"totalHoursAvailable\":50},\"employeeHoursToWork\":\"30\",\"employeeDepartment\":\"Post Office\"},{\"employeeName\":\"Belle Javey\",\"employeeAvailability\":{\"sunday\":{\"startTime\":8,\"endTime\":22},\"monday\":{\"startTime\":16.5,\"endTime\":22},\"wednesday\":{\"startTime\":16.5,\"endTime\":22},\"thursday\":{\"startTime\":16.5,\"endTime\":22},\"friday\":{\"startTime\":16.5,\"endTime\":22},\"saturday\":{\"startTime\":8,\"endTime\":22},\"totalHoursAvailable\":50},\"employeeHoursToWork\":\"20\",\"employeeDepartment\":\"Post Office\"},{\"employeeName\":\"Jason Leibel\",\"employeeAvailability\":{\"monday\":{\"startTime\":8,\"endTime\":21.5},\"tuesday\":{\"startTime\":8,\"endTime\":21.5},\"wednesday\":{\"startTime\":8,\"endTime\":21.5},\"thursday\":{\"startTime\":8,\"endTime\":21.5},\"saturday\":{\"startTime\":8,\"endTime\":21.5},\"totalHoursAvailable\":67.5},\"employeeHoursToWork\":\"40\",\"employeeDepartment\":\"Post Office\"},{\"employeeName\":\"Tyson Leibel\",\"employeeAvailability\":{\"monday\":{\"startTime\":8.5,\"endTime\":16},\"tuesday\":{\"startTime\":8.5,\"endTime\":16},\"wednesday\":{\"startTime\":8.5,\"endTime\":16},\"thursday\":{\"startTime\":8.5,\"endTime\":16},\"friday\":{\"startTime\":8.5,\"endTime\":16},\"totalHoursAvailable\":37.5},\"employeeHoursToWork\":\"40\",\"employeeDepartment\":\"Post Office\"}],\n      timeObj: {\n        departments: [\n          {\n            name: \"Post Office\", requiredEmployeeAtGivenTime: 1, totalHoursAvailable: 83.5,\n            timeFrames: [\n              {day: \"sunday\", open: 9, close: 21.5},\n              {day: \"monday\", open: 9, close: 21.5},\n              {day: \"tuesday\", open: 9, close: 21.5},\n              {day: \"wednesday\", open: 9, close: 21.5},\n              {day: \"thursday\", open: 9, close: 21.5},\n              {day: \"friday\", open: 9, close: 21.5},\n              {day: \"saturday\", open: 9, close: 17.5}\n            ]\n          }\n        ]\n      }\n    }\n  },\n};\n</script>\n\n<style>\n#app {\n  font-family: \"Roboto\", sans-serif !important;\n}\n\n.v-data-table-header {\n  background-color: #e6e6e6;\n}\n</style>\n"]}]}