{"remainingRequest":"/Users/administrator/Desktop/scheduleOmatic/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/administrator/Desktop/scheduleOmatic/src/components/EmployeeList.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/administrator/Desktop/scheduleOmatic/src/components/EmployeeList.vue","mtime":1616869495012},{"path":"/Users/administrator/Desktop/scheduleOmatic/node_modules/cache-loader/dist/cjs.js","mtime":1616809256131},{"path":"/Users/administrator/Desktop/scheduleOmatic/node_modules/babel-loader/lib/index.js","mtime":1616809255971},{"path":"/Users/administrator/Desktop/scheduleOmatic/node_modules/cache-loader/dist/cjs.js","mtime":1616809256131},{"path":"/Users/administrator/Desktop/scheduleOmatic/node_modules/vue-loader/lib/index.js","mtime":1616809260729}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nexport default {\n  name: \"EmployeeList\",\n  props: [\n    \"employeeList\"\n  ],\n  data() {\n    return {\n      file: null,\n      headers: [\n        {text: 'Employee Name', align: 'start', value: 'employeeName'},\n        {text: 'Desired Work Hours', value: 'employeeHoursToWork'},\n        {text: 'Department', value: 'employeeDepartment'},\n        {text: 'Hours Available to work', value: 'employeeAvailability.totalHoursAvailable'},\n        { text: 'Actions', value: 'actions', sortable: false }\n      ]\n    }\n  },\n  methods: {\n    saveEmployeeList() {\n      if (this.employeeList.length === 0) {\n        this.$emit(\"notification\", \"Not Enough People\", \"error\", \"No employee`s were found added to the list\")\n      } else {\n        const a = document.createElement(\"a\");\n        a.href = URL.createObjectURL(new Blob([JSON.stringify(this.employeeList, null, 2)], {\n          type: \"text/plain\"\n        }));\n        a.setAttribute(\"download\", \"EmployeeList.txt\");\n        document.body.appendChild(a);\n        a.click();\n        document.body.removeChild(a);\n      }\n    },\n    generateSchedule() {\n      if (this.employeeList.length === 0) {\n        this.$emit(\"notification\", \"Not Enough People\", \"error\", \"No employee`s were found added to the list\")\n      } else {\n        let lst = this.employeeList.sort((a, b) => {\n          return a.employeeAvailability.totalHoursAvailable - b.employeeAvailability.totalHoursAvailable\n        })\n        this.$emit(\"generateSchedule\", lst)\n      }\n    },\n    deleteItem(item) {\n      let index = this.employeeList.indexOf(item)\n      this.employeeList.splice(index, 1)\n    }\n  },\n  computed: {\n    liveEmployeeList() {\n      return this.employeeList\n    }\n  }\n}\n",{"version":3,"sources":["EmployeeList.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAgDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"EmployeeList.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <v-card\n      class=\"mx-auto\"\n      tile\n      style=\"width: 80%; padding: 20px; margin: 20px auto;\"\n  >\n    <h1>Employee List:</h1>\n    <v-data-table\n        :headers=\"headers\"\n        :items=\"liveEmployeeList\"\n        :items-per-page=\"10\">\n      <template v-slot:item.actions=\"{ item }\">\n        <v-btn\n            color=\"error\"\n            class=\"mr-4\"\n            @click=\"deleteItem(item)\"\n        >\n          x\n        </v-btn>\n      </template>\n    </v-data-table>\n\n    <v-file-input\n        v-model=\"file\"\n        accept=\"*.json\"\n        label=\"File input\"\n        on\n    ></v-file-input>\n\n    <v-btn\n        color=\"primary\"\n        class=\"mr-4\"\n        @click=\"saveEmployeeList\"\n    >\n      Save Employee List to file\n    </v-btn>\n\n    <v-btn\n        color=\"success\"\n        class=\"mr-4\"\n        @click=\"generateSchedule\"\n    >\n      Generate Schedule\n    </v-btn>\n  </v-card>\n</template>\n\n<script>\nexport default {\n  name: \"EmployeeList\",\n  props: [\n    \"employeeList\"\n  ],\n  data() {\n    return {\n      file: null,\n      headers: [\n        {text: 'Employee Name', align: 'start', value: 'employeeName'},\n        {text: 'Desired Work Hours', value: 'employeeHoursToWork'},\n        {text: 'Department', value: 'employeeDepartment'},\n        {text: 'Hours Available to work', value: 'employeeAvailability.totalHoursAvailable'},\n        { text: 'Actions', value: 'actions', sortable: false }\n      ]\n    }\n  },\n  methods: {\n    saveEmployeeList() {\n      if (this.employeeList.length === 0) {\n        this.$emit(\"notification\", \"Not Enough People\", \"error\", \"No employee`s were found added to the list\")\n      } else {\n        const a = document.createElement(\"a\");\n        a.href = URL.createObjectURL(new Blob([JSON.stringify(this.employeeList, null, 2)], {\n          type: \"text/plain\"\n        }));\n        a.setAttribute(\"download\", \"EmployeeList.txt\");\n        document.body.appendChild(a);\n        a.click();\n        document.body.removeChild(a);\n      }\n    },\n    generateSchedule() {\n      if (this.employeeList.length === 0) {\n        this.$emit(\"notification\", \"Not Enough People\", \"error\", \"No employee`s were found added to the list\")\n      } else {\n        let lst = this.employeeList.sort((a, b) => {\n          return a.employeeAvailability.totalHoursAvailable - b.employeeAvailability.totalHoursAvailable\n        })\n        this.$emit(\"generateSchedule\", lst)\n      }\n    },\n    deleteItem(item) {\n      let index = this.employeeList.indexOf(item)\n      this.employeeList.splice(index, 1)\n    }\n  },\n  computed: {\n    liveEmployeeList() {\n      return this.employeeList\n    }\n  }\n}\n</script>\n\n<style scoped>\n\n</style>"]}]}