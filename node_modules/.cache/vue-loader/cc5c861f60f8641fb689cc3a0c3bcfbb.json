{"remainingRequest":"/Users/jason/Desktop/GmailCustomFilterGenerator/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/Users/jason/Desktop/GmailCustomFilterGenerator/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/jason/Desktop/GmailCustomFilterGenerator/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/jason/Desktop/GmailCustomFilterGenerator/src/components/AddPidFilter.vue?vue&type=template&id=18b1c472&","dependencies":[{"path":"/Users/jason/Desktop/GmailCustomFilterGenerator/src/components/AddPidFilter.vue","mtime":1614963989489},{"path":"/Users/jason/Desktop/GmailCustomFilterGenerator/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/jason/Desktop/GmailCustomFilterGenerator/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/Users/jason/Desktop/GmailCustomFilterGenerator/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/jason/Desktop/GmailCustomFilterGenerator/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["var render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\n    \"div\",\n    [\n      _c(\n        \"v-card\",\n        {\n          staticStyle: {\n            width: \"70%\",\n            padding: \"20px\",\n            \"margin-left\": \"auto\",\n            \"margin-right\": \"auto\",\n            \"margin-top\": \"20px\"\n          }\n        },\n        [\n          _c(\n            \"v-form\",\n            { ref: \"form\", attrs: { \"lazy-validation\": \"\" } },\n            [\n              _vm.parseInProcess\n                ? _c(\n                    \"h1\",\n                    {\n                      staticStyle: {\n                        \"background-color\": \"#6278ae\",\n                        color: \"white\"\n                      }\n                    },\n                    [\n                      _vm._v(\n                        \"MUST enter Gmail label for filter with PID: \" +\n                          _vm._s(this.parseCurrentPid)\n                      )\n                    ]\n                  )\n                : _vm._e(),\n              _c(\n                \"label\",\n                { staticClass: \"AddPidFilter__label\", attrs: { for: \"label\" } },\n                [_vm._v(\"GMail Label\")]\n              ),\n              _c(\"vue-simple-suggest\", {\n                staticClass: \"AddPidFilter__input-select\",\n                attrs: {\n                  id: \"label\",\n                  name: \"label\",\n                  list: _vm.labelList,\n                  \"max-suggestions\": 0,\n                  \"filter-by-query\": true\n                },\n                model: {\n                  value: _vm.labelValue,\n                  callback: function($$v) {\n                    _vm.labelValue = $$v\n                  },\n                  expression: \"labelValue\"\n                }\n              }),\n              _c(\n                \"span\",\n                {\n                  directives: [\n                    {\n                      name: \"show\",\n                      rawName: \"v-show\",\n                      value: _vm.labelValue === \"\",\n                      expression: \"labelValue === ''\"\n                    }\n                  ],\n                  staticClass: \"AddPidFilter__error\"\n                },\n                [\n                  _c(\"img\", {\n                    attrs: {\n                      width: \"12px\",\n                      height: \"12px\",\n                      src: require(\"../images/error__icon.png\")\n                    }\n                  }),\n                  _vm._v(\n                    \" Select or enter a Gmail label for the filter to be applied to.\"\n                  )\n                ]\n              ),\n              _c(\n                \"span\",\n                {\n                  directives: [\n                    {\n                      name: \"show\",\n                      rawName: \"v-show\",\n                      value: !_vm.isRealLabel,\n                      expression: \"!isRealLabel\"\n                    }\n                  ],\n                  staticClass: \"AddPidFilter__warning\"\n                },\n                [\n                  _c(\"img\", {\n                    attrs: {\n                      width: \"12px\",\n                      height: \"12px\",\n                      src: require(\"../images/warning__icon.png\")\n                    }\n                  }),\n                  _vm._v(\n                    \" This Label does not exist and will be added if you add this to the list below.\"\n                  ),\n                  _c(\"br\"),\n                  _vm._v(\n                    '\\n      Note: if you want to add a sublabel add a slash (ex. \"/\") afterr a pre existing label then type the sublabel name'\n                  )\n                ]\n              ),\n              !_vm.parseInProcess\n                ? _c(\"v-text-field\", {\n                    attrs: {\n                      label: \"*PID\",\n                      placeholder: \"ABCD\",\n                      required: true\n                    },\n                    model: {\n                      value: _vm.pidValue,\n                      callback: function($$v) {\n                        _vm.pidValue = $$v\n                      },\n                      expression: \"pidValue\"\n                    }\n                  })\n                : _vm._e(),\n              !_vm.parseInProcess\n                ? _c(\n                    \"span\",\n                    {\n                      directives: [\n                        {\n                          name: \"show\",\n                          rawName: \"v-show\",\n                          value: _vm.pidValue === \"\",\n                          expression: \"pidValue === ''\"\n                        }\n                      ],\n                      staticClass: \"AddPidFilter__error\"\n                    },\n                    [\n                      _c(\"img\", {\n                        attrs: {\n                          width: \"12px\",\n                          height: \"12px\",\n                          src: require(\"../images/error__icon.png\")\n                        }\n                      }),\n                      _vm._v(\" Must provide PID letters.\")\n                    ]\n                  )\n                : _vm._e(),\n              !_vm.parseInProcess\n                ? _c(\"v-text-field\", {\n                    attrs: {\n                      label: \"Email list\",\n                      placeholder: \"email@gmail.com; email2@gmail.com\",\n                      required: \"\"\n                    },\n                    model: {\n                      value: _vm.emailListValue,\n                      callback: function($$v) {\n                        _vm.emailListValue = $$v\n                      },\n                      expression: \"emailListValue\"\n                    }\n                  })\n                : _vm._e(),\n              !_vm.parseInProcess\n                ? _c(\n                    \"div\",\n                    {\n                      staticStyle: {\n                        margin: \"0 auto\",\n                        width: \"100%\",\n                        \"text-align\": \"center\"\n                      }\n                    },\n                    [\n                      false\n                        ? _c(\n                            \"v-btn\",\n                            {\n                              staticStyle: { display: \"block\" },\n                              attrs: {\n                                \"x-large\": \"\",\n                                color: \"success\",\n                                dark: \"\",\n                                disabled: !_vm.isSignedIn\n                              },\n                              on: { click: _vm.addPidFilter }\n                            },\n                            [_vm._v(\"Add PID Filters\\n        \")]\n                          )\n                        : _vm._e(),\n                      _c(\n                        \"v-btn\",\n                        {\n                          staticStyle: {\n                            margin: \"10px\",\n                            \"background-color\": \"#62ae82 !important\"\n                          },\n                          attrs: {\n                            \"x-large\": \"\",\n                            dark: \"\",\n                            color: \"primary\",\n                            disabled: !_vm.isSignedIn\n                          },\n                          on: { click: _vm.addToList }\n                        },\n                        [_vm._v(\"Add filter to List\\n        \")]\n                      ),\n                      _c(\n                        \"v-btn\",\n                        {\n                          staticStyle: {\n                            margin: \"10px\",\n                            \"background-color\": \"#ae6265 !important\"\n                          },\n                          attrs: {\n                            \"x-large\": \"\",\n                            dark: \"\",\n                            disabled: !_vm.isSignedIn\n                          },\n                          on: { click: _vm.clearList }\n                        },\n                        [_vm._v(\"Clear Filter List\\n        \")]\n                      ),\n                      _c(\n                        \"v-btn\",\n                        {\n                          staticStyle: {\n                            margin: \"10px\",\n                            \"background-color\": \"#6278ae !important\"\n                          },\n                          attrs: {\n                            \"x-large\": \"\",\n                            dark: \"\",\n                            disabled: !_vm.isSignedIn\n                          },\n                          on: { click: _vm.downloadFile }\n                        },\n                        [_vm._v(\"Download (.xml)\\n        \")]\n                      )\n                    ],\n                    1\n                  )\n                : _c(\n                    \"div\",\n                    {\n                      staticStyle: {\n                        margin: \"0 auto\",\n                        width: \"100%\",\n                        \"text-align\": \"center\"\n                      }\n                    },\n                    [\n                      _c(\n                        \"v-btn\",\n                        {\n                          staticStyle: {\n                            margin: \"10px\",\n                            \"background-color\": \"#ae6265 !important\"\n                          },\n                          attrs: {\n                            \"x-large\": \"\",\n                            dark: \"\",\n                            disabled: !_vm.isSignedIn\n                          },\n                          on: { click: _vm.cancelParse }\n                        },\n                        [_vm._v(\"Cancel\\n        \")]\n                      ),\n                      _c(\n                        \"v-btn\",\n                        {\n                          staticStyle: {\n                            margin: \"10px\",\n                            \"background-color\": \"#62ae82 !important\"\n                          },\n                          attrs: {\n                            \"x-large\": \"\",\n                            dark: \"\",\n                            color: \"primary\",\n                            disabled: !_vm.isSignedIn\n                          },\n                          on: { click: _vm.assignLabelToPid }\n                        },\n                        [_vm._v(\"Add Label\\n        \")]\n                      )\n                    ],\n                    1\n                  )\n            ],\n            1\n          ),\n          _c(\"iframe\", {\n            staticStyle: { display: \"none\" },\n            attrs: { id: \"my_iframe\" }\n          }),\n          _c(\"v-spacer\"),\n          _c(\"v-data-table\", {\n            attrs: {\n              headers: _vm.headers,\n              items: _vm.filterList,\n              \"items-per-page\": 10\n            }\n          })\n        ],\n        1\n      ),\n      _c(\n        \"v-card\",\n        {\n          staticStyle: {\n            width: \"70%\",\n            padding: \"20px\",\n            \"margin-left\": \"auto\",\n            \"margin-right\": \"auto\",\n            \"margin-top\": \"20px\"\n          }\n        },\n        [\n          _c(\"h1\", [_vm._v(\"Parse PID list to create filters\")]),\n          _c(\"v-switch\", {\n            attrs: {\n              label:\n                \"I understand this may not work 100% so I will double check through out labels are correct\",\n              color: \"red\"\n            },\n            model: {\n              value: _vm.userUnderstandsMayNotWork,\n              callback: function($$v) {\n                _vm.userUnderstandsMayNotWork = $$v\n              },\n              expression: \"userUnderstandsMayNotWork\"\n            }\n          }),\n          _c(\"v-textarea\", {\n            attrs: {\n              disabled: !_vm.userUnderstandsMayNotWork,\n              placeholder:\n                \"try pasting a list of PID filters in here for me to parse\"\n            },\n            model: {\n              value: _vm.toBeParsedListValue,\n              callback: function($$v) {\n                _vm.toBeParsedListValue = $$v\n              },\n              expression: \"toBeParsedListValue\"\n            }\n          }),\n          _c(\n            \"v-btn\",\n            {\n              staticStyle: {\n                margin: \"10px\",\n                \"background-color\": \"#6278ae !important\"\n              },\n              attrs: {\n                \"x-large\": \"\",\n                dark: \"\",\n                color: \"primary\",\n                disabled: !_vm.isSignedIn\n              },\n              on: { click: _vm.parseAndAddToList }\n            },\n            [_vm._v(\"Parse and Add to list\\n    \")]\n          )\n        ],\n        1\n      )\n    ],\n    1\n  )\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns }"]}